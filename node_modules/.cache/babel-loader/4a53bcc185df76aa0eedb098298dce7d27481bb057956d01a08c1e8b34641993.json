{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/ReactProjects/tasks list study - sec 7/Hisham React Tasks List/src/components/Tasks/TaskInput/TaskInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./TaskInput.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n  .form-control {\n    margin: 0.5rem 0;\n  }\n\n  & label {\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    color: ${props => props.onInvalid ? \"red\" : \"black\"};\n  }\n\n  & input {\n    width: 100%;\n    border: 1px solid ${props => props.onInvalid ? \"red\" : \"gray\"};\n    background-color: ${props => props.onInvalid ? \"pink\" : \"transparent\"};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n\n  .form-control {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  /* &.invalid input {\n    border-color: red;\n    background-color: pink;\n  } */\n  /* &.invalid label {\n    font-weight: bold;\n    color: red;\n  } */\n`;\n_c = FormControl;\nconst TaskInput = props => {\n  _s();\n  const [nText, setNText] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const changeHandler = e => {\n    if (e.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setNText(e.target.value);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (nText.trim().length === 0) {\n      setIsValid(false);\n      return;\n    } else {\n      props.onAdd(nText);\n      setNText(\"\"); // RESET THE INPUT EMPTY\n    }\n  };\n\n  //1. inline style: style={{ color: isValid ? \"black\" : \"red\" }}\n  //2. CSS style classes: .form-control.invalid input { border-color: red; background-color: pink; }\n  // JUST WRITE className={`form-control FIRST CLASS ${!isValid ? \"invalid\" SECOND CLASS : \"\"}`}\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      onInvalid: !isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Day Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nText // BINDING the value to the state\n        ,\n        type: \"text\",\n        onChange: changeHandler\n        // style={{\n        //   backgroundColor: isValid ? \"white\" : \"pink\",\n        //   borderColor: isValid ? \"gray\" : \"red\",\n        // }}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add a Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskInput, \"IH4lQ+ySqovsKeOqd459oDRYYM0=\");\n_c2 = TaskInput;\nexport default TaskInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"TaskInput\");","map":{"version":3,"names":["React","useState","Button","styled","jsxDEV","_jsxDEV","FormControl","div","props","onInvalid","_c","TaskInput","_s","nText","setNText","isValid","setIsValid","changeHandler","e","target","value","trim","length","submitHandler","preventDefault","onAdd","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c2","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/ReactProjects/tasks list study - sec 7/Hisham React Tasks List/src/components/Tasks/TaskInput/TaskInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./TaskInput.css\";\nimport styled from \"styled-components\";\n\nconst FormControl = styled.div`\n  .form-control {\n    margin: 0.5rem 0;\n  }\n\n  & label {\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    color: ${(props) => (props.onInvalid ? \"red\" : \"black\")};\n  }\n\n  & input {\n    width: 100%;\n    border: 1px solid ${(props) => (props.onInvalid ? \"red\" : \"gray\")};\n    background-color: ${(props) => (props.onInvalid ? \"pink\" : \"transparent\")};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n\n  .form-control {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  /* &.invalid input {\n    border-color: red;\n    background-color: pink;\n  } */\n  /* &.invalid label {\n    font-weight: bold;\n    color: red;\n  } */\n`;\n\nconst TaskInput = (props) => {\n  const [nText, setNText] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const changeHandler = (e) => {\n    if (e.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setNText(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (nText.trim().length === 0) {\n      setIsValid(false);\n      return;\n    } else {\n      props.onAdd(nText);\n      setNText(\"\"); // RESET THE INPUT EMPTY\n    }\n  };\n\n  //1. inline style: style={{ color: isValid ? \"black\" : \"red\" }}\n  //2. CSS style classes: .form-control.invalid input { border-color: red; background-color: pink; }\n  // JUST WRITE className={`form-control FIRST CLASS ${!isValid ? \"invalid\" SECOND CLASS : \"\"}`}\n\n  return (\n    <form onSubmit={submitHandler}>\n      {/* NOT WORK <div className={`form-control ${isValid ? \"\" : \"invalid\"}`}> */}\n      {/* <FormControl className={`form-control ${!isValid ? \"invalid\" : \"\"}`}> */}\n      <FormControl onInvalid={!isValid}>\n        <label\n        // style={{ color: isValid ? \"black\" : \"red\" }}\n        >\n          Day Tasks\n        </label>\n        <input\n          value={nText} // BINDING the value to the state\n          type=\"text\"\n          onChange={changeHandler}\n          // style={{\n          //   backgroundColor: isValid ? \"white\" : \"pink\",\n          //   borderColor: isValid ? \"gray\" : \"red\",\n          // }}\n        />\n      </FormControl>\n      <Button type=\"submit\">Add a Task</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}